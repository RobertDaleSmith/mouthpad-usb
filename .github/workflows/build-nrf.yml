name: Build nRF52 Firmware

on:
  push:
    branches: [ main ]
    paths:
      - 'ncs/**'
      - '.github/workflows/build-nrf.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'ncs/**'
      - '.github/workflows/build-nrf.yml'
  workflow_dispatch:

jobs:
  build-nrf:
    name: Build nRF52840 Firmware
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Build firmware using Docker
        working-directory: ncs
        run: |
          docker-compose run --rm mouthpad-build

      - name: Prepare artifacts
        run: |
          mkdir -p artifacts
          BUILD_DATE=$(date +%Y%m%d_%H%M%S)

          # Copy UF2 files if they exist
          if [ -f ncs/build/mouthpad_usb_xiao_ble_*.uf2 ]; then
            cp ncs/build/mouthpad_usb_xiao_ble_*.uf2 artifacts/ || true
          fi

          # Copy build artifacts from Docker build directory
          if [ -d ncs/build/app ]; then
            cd ncs/build/app/zephyr
            cp zephyr.uf2 ../../../../artifacts/mouthpad_usb_xiao_ble_${BUILD_DATE}.uf2 || true
            cp zephyr.hex ../../../../artifacts/mouthpad_usb_xiao_ble_${BUILD_DATE}.hex || true
            cp zephyr.bin ../../../../artifacts/mouthpad_usb_xiao_ble_${BUILD_DATE}.bin || true
            cd ../../../..
          fi

          # Create flash instructions
          cat > artifacts/FLASH_README.txt << 'EOF'
          === MouthPad^USB nRF52840 Firmware ===

          Flash using UF2 (easiest):
            1. Double-tap RESET button on board
            2. Board mounts as USB drive (XIAO-SENSE or NRF52BOOT)
            3. Drag and drop the .uf2 file to the drive
            4. Board auto-resets and runs new firmware

          Or use the DFU command:
            1. Connect to CDC maintenance port (typically /dev/ttyACM1 or /dev/cu.usbmodemXXXX3)
            2. Type: dfu
            3. Board reboots into bootloader
            4. Drag .uf2 file to mounted drive

          Or flash with J-Link:
            nrfjprog --program mouthpad_usb_xiao_ble_*.hex --chiperase -f nrf52 --reset

          Build timestamp: $(date)
          EOF

      - name: Upload firmware artifacts
        uses: actions/upload-artifact@v4
        with:
          name: mouthpad-usb-nrf52-firmware
          path: artifacts/
          if-no-files-found: error
          retention-days: 90

      - name: Build summary
        run: |
          echo "### âœ… nRF52840 Build Complete" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Board:** XIAO nRF52840" >> $GITHUB_STEP_SUMMARY
          echo "**NCS Version:** v3.1.0" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          if ls artifacts/*.uf2 1> /dev/null 2>&1; then
            SIZE=$(stat -c%s artifacts/*.uf2 2>/dev/null | head -1 || stat -f%z artifacts/*.uf2 2>/dev/null | head -1 || echo "unknown")
            echo "**Firmware size:** $SIZE bytes" >> $GITHUB_STEP_SUMMARY
          fi

          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Artifacts uploaded as: \`mouthpad-usb-nrf52-firmware\`" >> $GITHUB_STEP_SUMMARY
